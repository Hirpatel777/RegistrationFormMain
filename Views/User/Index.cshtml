@model IEnumerable<Contact>

@{
    ViewData["Title"] = "Contacts";
}

<div class="container mt-4">
    <h2>Contacts</h2>
    
    <button id="addContactBtn" class="btn btn-primary mb-3">Add Contact</button>
    
    <table id="contactsTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in Model)
            {
                <tr data-id="@contact.ContactId">
                    <td>@contact.Name</td>
                    <td>@contact.Email</td>
                    <td>@contact.Phone</td>
                    <td>
                        <button class="btn btn-sm btn-warning edit-btn" data-id="@contact.ContactId">Edit</button>
                        <button class="btn btn-sm btn-danger delete-btn" data-id="@contact.ContactId">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="contactModal" tabindex="-1" role="dialog" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="contactModalLabel">Add/Edit Contact</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="contactForm">
                    <input type="hidden" id="contactId" />
                    
                    <div class="form-group">
                        <label for="name">Name*</label>
                        <input type="text" class="form-control" id="name" required>
                        <div class="invalid-feedback">Please provide a name.</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="email">Email*</label>
                        <input type="email" class="form-control" id="email" required>
                        <div class="invalid-feedback">Please provide a valid email.</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="phone">Phone No.*</label>
                        <input type="text" class="form-control" id="phone" required>
                        <div class="invalid-feedback">Please provide a valid 10-digit phone number.</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="address">Address</label>
                        <textarea class="form-control" id="address" rows="2"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="state">State*</label>
                        <select class="form-control" id="state" required>
                            <option value="">Select State</option>
                        </select>
                        <div class="invalid-feedback">Please select a state.</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="city">City*</label>
                        <select class="form-control" id="city" required disabled>
                            <option value="">Select City</option>
                        </select>
                        <div class="invalid-feedback">Please select a city.</div>
                    </div>
                    
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="agree">
                        <label class="form-check-label" for="agree">I agree to the terms and conditions</label>
                        <div class="invalid-feedback">You must agree before submitting.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="submitBtn" disabled>Submit</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load states
            $.get('/api/Contacts/States', function(states) {
                $('#state').empty().append('<option value="">Select State</option>');
                $.each(states, function(i, state) {
                    $('#state').append($('<option>').val(state.stateId).text(state.stateName));
                });
            });
            
            // State change event
            $('#state').change(function() {
                var stateId = $(this).val();
                if (stateId) {
                    $('#city').prop('disabled', false);
                    $.get('/api/Contacts/Cities', { stateId: stateId }, function(cities) {
                        $('#city').empty().append('<option value="">Select City</option>');
                        $.each(cities, function(i, city) {
                            $('#city').append($('<option>').val(city.cityId).text(city.cityName));
                        });
                    });
                } else {
                    $('#city').prop('disabled', true).empty().append('<option value="">Select City</option>');
                }
            });
            
            // Agree checkbox change
            $('#agree').change(function() {
                $('#submitBtn').prop('disabled', !$(this).is(':checked'));
            });
            
            // Form validation
            function validateForm() {
                var isValid = true;
                
                if ($('#name').val().trim() === '') {
                    $('#name').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#name').removeClass('is-invalid');
                }
                
                if ($('#email').val().trim() === '' || !isValidEmail($('#email').val())) {
                    $('#email').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#email').removeClass('is-invalid');
                }
                
                if ($('#phone').val().trim() === '' || !isValidPhone($('#phone').val())) {
                    $('#phone').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#phone').removeClass('is-invalid');
                }
                
                if ($('#state').val() === '') {
                    $('#state').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#state').removeClass('is-invalid');
                }
                
                if ($('#city').val() === '') {
                    $('#city').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#city').removeClass('is-invalid');
                }
                
                if (!$('#agree').is(':checked')) {
                    $('#agree').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#agree').removeClass('is-invalid');
                }
                
                return isValid;
            }
            
//             function isValidEmail(email) {
//                 var re =/^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;
// ;
//                 return re.test(email);
//             }
            
             function isValidEmail(email) {
                var re = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                return re.test(email);
            }

            function isValidPhone(phone) {
                var re = /^[0-9]{10}$/;
                return re.test(phone);
            }
            
            // Add contact button click
            $('#addContactBtn').click(function() {
                $('#contactModalLabel').text('Add Contact');
                $('#contactForm')[0].reset();
                $('#contactId').val('');
                $('#city').prop('disabled', true).empty().append('<option value="">Select City</option>');
                $('#submitBtn').prop('disabled', true);
                $('#contactModal').modal('show');
            });
            
            // Edit button click
            $(document).on('click', '.edit-btn', function() {
                var contactId = $(this).data('id');
                
                $.get('/api/Contacts/' + contactId, function(contact) {
                    $('#contactModalLabel').text('Edit Contact');
                    $('#contactId').val(contact.contactId);
                    $('#name').val(contact.name);
                    $('#email').val(contact.email);
                    $('#phone').val(contact.phone);
                    $('#address').val(contact.address);
                    
                    // Load states and set the selected state
                    // $.get('/api/Contacts/States', function(states) {
                    //     $('#state').empty().append('<option value="">Select State</option>');
                    //     $.each(states, function(i, state) {
                    //         $('#state').append($('<option>').val(state.stateId).text(state.stateName)
                    //             .prop('selected', state.stateId === contact.stateId);
                    //     });
                        
                    //     // Load cities for the selected state
                    //     $.get('/api/Contacts/Cities', { stateId: contact.stateId }, function(cities) {
                    //         $('#city').prop('disabled', false).empty().append('<option value="">Select City</option>');
                    //         $.each(cities, function(i, city) {
                    //             $('#city').append($('<option>').val(city.cityId).text(city.cityName))
                    //                 .prop('selected', city.cityId === contact.cityId);
                    //         });
                    //     });
                    // });
                    $.get('/api/Contacts/States', function (states) {
                        $('#state').empty().append('<option value="">Select State</option>');
                        $.each(states, function (i, state) {
                            $('#state').append(
                                $('<option>')
                                    .val(state.stateId)
                                    .text(state.stateName)
                                    .prop('selected', state.stateId === contact.stateId)
                            );
                        });

                        // Load cities for the selected state
                        if (contact && contact.stateId) {
                            $.get('/api/Contacts/Cities', { stateId: contact.stateId }, function (cities) {
                                $('#city').prop('disabled', false)
                                    .empty()
                                    .append('<option value="">Select City</option>');
                                $.each(cities, function (i, city) {
                                    $('#city').append(
                                        $('<option>')
                                            .val(city.cityId)
                                            .text(city.cityName)
                                            .prop('selected', city.cityId === contact.cityId)
                                    );
                                });
                            });
                        }
                    });
                    
                    $('#agree').prop('checked', contact.agree);
                    $('#submitBtn').prop('disabled', !contact.agree);
                    
                    $('#contactModal').modal('show');
                });
            });
            
            // Submit button click
            // $('#submitBtn').click(function() {
            //     if (validateForm()) {
            //         var contact = {
            //             contactId: $('#contactId').val(),
            //             name: $('#name').val(),
            //             email: $('#email').val(),
            //             phone: $('#phone').val(),
            //             address: $('#address').val(),
            //             stateId: $('#state').val(),
            //             cityId: $('#city').val(),
            //             agree: $('#agree').is(':checked')
            //         };
                    
            //         var method = contact.contactId ? 'PUT' : 'POST';
            //         var url = contact.contactId ? '/api/Contacts/PostContact/' + contact.contactId : '/api/Contacts/PostContact/';
            //         alert(method);
            //         alert(url);
            //         $.ajax({
            //             url: url,
            //             type: method,
            //             contentType: 'application/json',
            //             data: JSON.stringify(contact),
            //             success: function(response) {
            //                 $('#contactModal').modal('hide');
            //                 location.reload();
            //             },
            //             error: function(xhr, status, error) {
            //                 alert('Error: ' + error);
            //             }
            //         });
            //     }
            // });
            $('#submitBtn').click(function () {
                if (validateForm()) {
                    var contact = {
                        contactId: $('#contactId').val() || 0,
                        name: $('#name').val(),
                        email: $('#email').val(),
                        phone: $('#phone').val(),
                        address: $('#address').val(),
                        stateId: parseInt($('#state').val()),
                        cityId: parseInt($('#city').val()),
                        agree: $('#agree').is(':checked')
                    };

                    var method = contact.contactId ? 'PUT' : 'POST';
                    var url = '/User/' + (contact.contactId ? 'Edit' : 'Create');
                    // alert(method);
                    // alert(url);
                    $.ajax({
                        url: url,
                        type: method,
                        contentType: 'application/json',
                        data: JSON.stringify(contact),
                        success: function (response) {
                            $('#contactModal').modal('hide');
                            location.reload();
                        },
                        error: function (xhr) {
                            console.error('Error:', xhr.responseJSON);
                            alert('Error: ' + (xhr.responseJSON?.title || xhr.statusText));
                        }
                    });
                }
            });
            
//             $('#submitBtn').click(function() {
//     if (validateForm()) {
//         var contact = {
//             contactId: $('#contactId').val() || 0,
//             name: $('#name').val(),
//             email: $('#email').val(),
//             phone: $('#phone').val(),
//             address: $('#address').val(),
//             stateId: parseInt($('#state').val()),
//             cityId: parseInt($('#city').val()),
//             agree: $('#agree').is(':checked')
//         };

//         $.ajax({
//             url: '/User/Create',
//             type: 'POST',
//             contentType: 'application/json', // This is crucial
//             data: JSON.stringify(contact), // Must stringify
//             success: function(response) {
//                 $('#contactModal').modal('hide');
//                 location.reload();
//             },
//             error: function(xhr) {
//                 console.error('Error:', xhr.responseJSON);
//                 alert('Error: ' + (xhr.responseJSON?.title || xhr.statusText));
//             }
//         });
//     }
// });

            // Delete button click
            $(document).on('click', '.delete-btn', function() {
                var contactId = $(this).data('id');
                
                if (confirm('Are you sure you want to delete this contact?')) {
                    $.ajax({
                        url: '/api/Contacts/' + contactId,
                        type: 'DELETE',
                        success: function(response) {
                            location.reload();
                        },
                        error: function(xhr, status, error) {
                            alert('Error: ' + error);
                        }
                    });
                }
            });

            // $(document).on('click', '.delete-btn', function () {
            //     var contactId = $(this).data('id');

            //     if (confirm('Are you sure you want to delete this contact?')) {
            //         $.ajax({
            //             url: '/User/Delete',
            //             type: 'DELETE',
            //             data: JSON.stringify({ id: contactId }),
            //             contentType: 'application/json',
            //             success: function (response) {
            //                 location.reload();
            //             },
            //             error: function (xhr) {
            //                 alert('Error: ' + xhr.statusText);
            //             }
            //         });
            //     }
            // });

            $('.close').click(function () {
                $('#contactModal').modal('hide');
            });

            $('[data-dismiss="modal"]').click(function () {
                $('#contactModal').modal('hide');
            });
        });
    </script>
}